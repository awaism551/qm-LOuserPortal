import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "../../globals.css";

import ApolloWrapper from "@/lib/apollo-provider";
import { ReactNode } from "react";
import { NextIntlClientProvider } from "next-intl";
import TopNav from "@/components/layout/user-portal/TopNav";
import SidebarMenu from "@/components/layout/user-portal/SidebarMenu";

interface Props {
  children: ReactNode;
  params: Promise<{ locale: string }>;
}

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({ children, params }: Props) {
  const { locale } = await params;

  // Load translation file directly in the layout
  let messages;
  try {
    messages = (await import(`../locales/${locale}.json`)).default;
  } catch {
    messages = {}; // fallback if translation not found
  }

  return (
    <html lang={locale} dir={locale === "ar" ? "rtl" : "ltr"}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <NextIntlClientProvider messages={messages} locale={locale}>
          <ApolloWrapper>
            <div className="flex min-h-screen w-full overflow-x-hidden">
              {/* Sidebar fixed on the left */}
              <aside className="w-72 fixed inset-y-0 left-0 z-30 bg-white border-r shadow-sm">
                <SidebarMenu />
              </aside>
              {/* Main content area shifted right by sidebar width */}

              <div className="flex-1 ml-72 min-h-screen bg-page-main">
                <div className="w-full">
                  <TopNav />
                </div>
                <main className="bg-page-main min-h-[1300px] p-6">
                  {children}
                </main>
              </div>
            </div>
          </ApolloWrapper>
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
